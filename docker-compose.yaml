version: "3.8"
services:
  resource-service:
    build: ./resource-service
    container_name: "resource-service"
    ports:
      - "7080:8080"
    restart: always
    environment:
      - DATABASE_URL=jdbc:postgresql://resource-service-database:5432/${RESOURCE_SERVICE_DATABASE_NAME}
      - POSTGRES_USER=${RESOURCE_SERVICE_DATABASE_USER}
      - POSTGRES_PASSWORD=${RESOURCE_SERVICE_DATABASE_PASSWORD}
    depends_on:
      - resource-service-database
      - song-service

  song-service:
    build: ./song-service
    container_name: "song-service"
    ports:
      - "7081:8080"
    environment:
      - DATABASE_URL=jdbc:postgresql://resource-service-database:5432/${SONG_SERVICE_DATABASE_NAME}
      - POSTGRES_USER=${SONG_SERVICE_DATABASE_USER}
      - POSTGRES_PASSWORD=${SONG_SERVICE_DATABASE_PASSWORD}
    restart: always
    depends_on:
      - song-service-database

  resource-service-database:
    image: postgres:16.1-bullseye
    container_name: "resource-service-database"
    ports:
      - "7432:5432"
    volumes:
      - resource-service-database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${RESOURCE_SERVICE_DATABASE_NAME}
      - POSTGRES_USER=${RESOURCE_SERVICE_DATABASE_USER}
      - POSTGRES_PASSWORD=${RESOURCE_SERVICE_DATABASE_PASSWORD}

  song-service-database:
    image: postgres:16.1-bullseye
    container_name: "song-service-database"
    ports:
      - "8432:5432"
    volumes:
      - song-service-database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${SONG_SERVICE_DATABASE_NAME}
      - POSTGRES_USER=${SONG_SERVICE_DATABASE_USER}
      - POSTGRES_PASSWORD=${SONG_SERVICE_DATABASE_PASSWORD}
volumes:
  resource-service-database:
  song-service-database:
